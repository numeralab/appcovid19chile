{"version":3,"sources":["App.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","images/favicon.png","components/Cards/Cards.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infectados","CardContent","Typography","titulo","color","gutterBottom","variant","cifra","start","end","value","duration","separator","Date","toLocaleDateString","recuperados","muertes","cargando","imagen","src","numeralogo","alt","url","fetchData","provincia","a","changeableUrl","axios","get","filteredData","find","province","provinceState","toISOString","console","log","fetchDailyData","map","date","reportDate","total","fetchCountries","provincias","Chart","useState","setDailyData","useEffect","fetchAPI","inicial","labels","datasets","label","backgroundColor","options","legends","display","title","text","barChart","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","chile","fuente","enlacefuente","href","selector","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cf29cada.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__11mGL\",\"titulo\":\"App_titulo__2_XdG\",\"chile\":\"App_chile__27zee\",\"fuente\":\"App_fuente__1aG-S\",\"enlacefuente\":\"App_enlacefuente__3iG0z\",\"imagen\":\"App_imagen__1U1ar\",\"image\":\"App_image__yfK44\"};","import React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\nimport Zoom from 'react-reveal/Zoom';\nimport numeralogo from './../../images/favicon.png';\nimport styles from './Cards.module.css';\n\nconst Cards = ({ data :{confirmed, recovered, deaths, lastUpdate}}) => {\n\n    if(!confirmed) {\n        return (\n            <div className={styles.cargando}>\n            <Zoom>\n                <img className={styles.imagen} src={numeralogo} alt=\"Logo de Numeral.Lab\" />\n            </Zoom>\n            </div>\n        )\n    };\n\n\n\n    return(\n        <div className={styles.container}>\n        <Grid container spacing={3} justify=\"center\">\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infectados)}>\n                <CardContent>\n                    <Typography className={styles.titulo} color=\"textSecondary\"       gutterBottom>Casos Totales</Typography>\n                    <Typography variant=\"h5\">\n                        <CountUp className={styles.cifra}  start={0} end={confirmed.value} duration={2.5} separator=\",\"\n                        />\n                    </Typography>\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toLocaleDateString()}</Typography>\n                    <Typography variant=\"body2\">Número de Casos Totales de COVID-19</Typography>\n                </CardContent>\n            </Grid>\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recuperados)}>\n                <CardContent>\n                    <Typography className={styles.titulo} color=\"textSecondary\" gutterBottom>Recuperados</Typography>\n                    <Typography variant=\"h5\">\n                        <CountUp className={styles.cifra}  start={0} end={recovered.value} duration={2.5} separator=\",\"\n                        />\n                    </Typography>\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toLocaleDateString()}</Typography>\n                    <Typography variant=\"body2\">Número de Casos Recuperados Totales de COVID-19</Typography>\n                </CardContent>\n            </Grid>\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.muertes)}>\n                <CardContent>\n                    <Typography className={styles.titulo} color=\"textSecondary\" gutterBottom>Muertes</Typography>\n                    <Typography variant=\"h5\">\n                        <CountUp className={styles.cifra}  start={0} end={deaths.value} duration={2.5} separator=\",\"\n                        />\n                    </Typography>\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toLocaleDateString()}</Typography>\n                    <Typography variant=\"body2\">Número de muertes totales causadas por COVID-19</Typography>\n                </CardContent>\n            </Grid>\n        </Grid>\n        </div>\n    )\n}\n\nexport default Cards;","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api/countries/CHILE';\nexport const fetchData = async (provincia) => {\n    let changeableUrl = url;\n    if (provincia) {\n        changeableUrl = `${url}/confirmed`;\n        try {\n            const data = await axios.get(changeableUrl);\n            const filteredData = data.data.find((province) => {\n                if (province.provinceState == provincia) {\n                    return province;\n                };\n            })\n            return {\n                confirmed: { value: filteredData.confirmed }, recovered: { value: filteredData.recovered }, deaths: { value: filteredData.deaths},\n                lastUpdate: new Date(filteredData.lastUpdate).toISOString()\n            };\n        } catch (error) {\n            return error;\n        }\n    } else {\n        try {\n            const {\n                data: {\n                    confirmed,\n                    recovered,\n                    deaths,\n                    lastUpdate,\n                }\n            } = await axios.get(changeableUrl);\n\n            console.log(\"fetchdata else: \", confirmed,\n                recovered,\n                deaths,\n                lastUpdate);\n            return {\n                confirmed,\n                recovered,\n                deaths,\n                lastUpdate,\n            };\n        } catch (error) {\n            return error;\n        }\n    }\n};\n\nexport const fetchDailyData = async () => {\n    try {\n        const {\n            data\n        } = await axios.get(`${url}`);\n\n        return data.map(({\n            confirmed,\n            deaths,\n            reportDate: date\n        }) => ({\n            confirmed: confirmed.total,\n            deaths: deaths.total,\n            date\n        }));\n    } catch (error) {\n        return error;\n    }\n};\n\nexport const fetchCountries = async () => {\n    try {\n        const {data: provincias } = await axios.get(`${url}/confirmed`);\n        return provincias.map((provincia) => provincia.provinceState);\n    } catch (error) {\n        return error;\n    }\n};","import React, { useState, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { fetchDailyData } from '../../api';\nimport styles from './Chart.module.css';\n\nconst Chart = ({data : {confirmed, recovered, deaths} , provincia}) => {\n    const [dailyData, setDailyData] = useState({});\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData());\n        }\n        fetchAPI();\n    }, []);\n\n\n    const inicial = (\n        confirmed ? (\n    < Bar\n    data = {\n        {\n            labels: ['Casos Totales', 'Recuperados Totales','Muertes'],\n            datasets: [{\n                label: 'Total de personas',\n                backgroundColor: ['rgba(31, 97, 179,0.5)',\n                    'rgba(0, 255, 0, 0.5)',\n                    'rgba(255, 30, 0, 0.5)',\n\n                ],\n                data: [confirmed.value, recovered.value, deaths.value],\n            }, ],\n        }\n    }\n\n    options = {\n    {\n    legends: {\n        display: false\n    },\n    title: {\n        display: true,\n        text: `Estado actualizado en todo Chile`\n    }\n    }\n    }\n    />\n\n    ): null\n\n    );\n\n\nconst barChart = (\nprovincia ? (\n    <Bar\n        data={{\n            labels: ['Casos Totales', 'Recuperados Totales', 'Muertes'],\n            datasets: [ {\n                label: 'Total de personas',\n                backgroundColor: ['rgba(31, 97, 179,0.5)',\n                    'rgba(0, 255, 0, 0.5)',\n                    'rgba(255, 30, 0, 0.5)',\n                    \n                ],\n            data: [confirmed.value, recovered.value, deaths.value],\n            },\n            ],\n        }}\n\n        options={{\n            legends: {display:false}, \n            title: { display:true, text:`Estado actualizado en la región de ${provincia}`}\n        }}\n     />\n\n) : null\n\n);\n\nreturn (\n    <div className={styles.container}>\n        {provincia ? barChart : inicial}\n    </div>\n);\n}\n\nexport default Chart;","import React, { useState, useEffect} from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\n\nimport styles from './CountryPicker.module.css';\n\nimport { fetchCountries } from '../../api';\n\nconst CountryPicker = ({\n        handleCountryChange\n    }) => {\n\n    const [fetchedCountries, setFetchedCountries] = useState([]);\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setFetchedCountries(await fetchCountries());\n        }\n\n        fetchAPI();\n\n    }, [setFetchedCountries]);\n\n\n    return ( \n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue = \"\"\n            onChange = {\n                (e) => {\n                     handleCountryChange(e.target.value)\n                     \n                }\n            } >\n{/* Lo siguiente es para el selector de países */}\n                <option value=\"\">Todo Chile</option>\n                {fetchedCountries.map((provincia, i) => <option key={i} value={provincia}>{provincia}</option>)}\n            </NativeSelect>\n\n        </FormControl>\n    )\n}\n\nexport default CountryPicker;","import React from 'react';\n\n// import Cards from './components/Cards/Cards.jsx';\n// import Chart from './components/Chart/Chart.jsx';\n// import CountryPicker from './components/CountryPicker/CountryPicker.jsx';\n\nimport {Cards, Chart, CountryPicker} from './components';\nimport styles from './App.module.css';\nimport { fetchData} from './api';\nimport Zoom from 'react-reveal/Zoom';\n\nimport numeralogo from './images/favicon.png';\n// Acá se agrega el componente\nclass App extends React.Component {\n    state = {\n        data: {},\n        provincia: '',\n    }\n\n    async componentDidMount(){\n        const fetchedData = await fetchData();\n\n        this.setState({ data: fetchedData })\n    }\n\n    handleCountryChange = async (provincia) => {\n        const fetchedData = await fetchData(provincia);\n        console.log(fetchedData)\n        this.setState({ data: fetchedData, provincia: provincia })\n    }\n\n\n    render() {\n        const { data, provincia} = this.state;\n\n\n        return (\n            <div className={styles.container}>\n            <Zoom>\n                <img className={styles.imagen} src={numeralogo} alt=\"Logo de Numeral.Lab\" />\n                <h1 className={styles.titulo}>Seguimiento COVID-19</h1>\n                <h3 className={styles.chile}>Chile</h3>\n                <h4 className={styles.fuente}>Las cifras a continuación son de <a className={styles.enlacefuente} href=\"https://covid19.mathdro.id/\">fuente internacional</a>. Las regiones están ordenadas por número de casos totales.</h4>\n                \n                <Cards data={data} />\n            </Zoom>\n                <CountryPicker className={styles.selector} handleCountryChange = {\n                    this.handleCountryChange\n                }\n                />\n                <Chart data={data} provincia={provincia} />\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));","module.exports = __webpack_public_path__ + \"static/media/favicon.db739906.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1EbqX\",\"card\":\"Cards_card__225mA\",\"cifra\":\"Cards_cifra__3QPoZ\",\"titulo\":\"Cards_titulo__2r6Y2\",\"infectados\":\"Cards_infectados__5xvOV\",\"recuperados\":\"Cards_recuperados__3SEYo\",\"muertes\":\"Cards_muertes__3wC0E\",\"activos\":\"Cards_activos__3y7aQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3499I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3VbOp\"};"],"sourceRoot":""}