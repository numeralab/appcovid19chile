{"version":3,"sources":["components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","images/favicon.png","App.module.css","components/Cards/Cards.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/perfiloptimizada.jpg"],"names":["Cards","data","confirmed","recovered","deaths","lastUpdate","active","className","styles","cargando","imagen","src","numeralogo","alt","activos","Grid","item","component","Card","xs","md","cx","card","CardContent","Typography","titulo","color","gutterBottom","variant","cifra","start","end","value","duration","separator","Date","toLocaleDateString","container","spacing","justify","infectados","recuperados","muertes","url","fetchData","provincia","a","changeableUrl","axios","get","filteredData","find","province","provinceState","toISOString","console","log","fetchDailyData","map","date","reportDate","total","fetchCountries","provincias","Chart","useState","setDailyData","useEffect","fetchAPI","inicial","labels","datasets","label","backgroundColor","options","legends","display","title","text","barChart","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","menu","href","naranjo","azul","chile","fuente","enlacefuente","selector","Chip","chipp","avatar","Avatar","contacto","React","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.9f601441.chunk.js","sourcesContent":["import React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\nimport Zoom from 'react-reveal/Zoom';\nimport numeralogo from './../../images/favicon.png';\nimport styles from './Cards.module.css';\n\nconst Cards = ({ data :{confirmed, recovered, deaths, lastUpdate, active}}) => {\n\n    if(!confirmed) {\n        return (\n            <div className={styles.cargando}>\n            <Zoom>\n                <img className={styles.imagen} src={numeralogo} alt=\"Logo de Numeral.Lab\" />\n            </Zoom>\n            </div>\n        )\n    };\n\nconst activos = (\nactive ? (\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.activos)}>\n                    <CardContent>\n                        <Typography className={styles.titulo} color=\"textSecondary\"       gutterBottom>Casos Activos</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp className={styles.cifra}  start={0} end={active.value} duration={2.5} separator=\",\"\n                         />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toLocaleDateString()}</Typography>\n                        <Typography variant=\"body2\">NÃºmero de Casos Activos de COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n) : null\n\n);\n\n\n    return(\n        <div className={styles.container}>\n        <Grid container spacing={3} justify=\"center\">\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infectados)}>\n                <CardContent>\n                    <Typography className={styles.titulo} color=\"textSecondary\"       gutterBottom>Casos Totales</Typography>\n                    <Typography variant=\"h5\">\n                        <CountUp className={styles.cifra}  start={0} end={confirmed.value} duration={2.5} separator=\",\"\n                        />\n                    </Typography>\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toLocaleDateString()}</Typography>\n                    <Typography variant=\"body2\">NÃºmero de Casos Totales de COVID-19</Typography>\n                </CardContent>\n            </Grid>\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recuperados)}>\n                <CardContent>\n                    <Typography className={styles.titulo} color=\"textSecondary\" gutterBottom>Recuperados</Typography>\n                    <Typography variant=\"h5\">\n                        <CountUp className={styles.cifra}  start={0} end={recovered.value} duration={2.5} separator=\",\"\n                        />\n                    </Typography>\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toLocaleDateString()}</Typography>\n                    <Typography variant=\"body2\">NÃºmero de Casos Recuperados Totales de COVID-19</Typography>\n                </CardContent>\n            </Grid>\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.muertes)}>\n                <CardContent>\n                    <Typography className={styles.titulo} color=\"textSecondary\" gutterBottom>Muertes</Typography>\n                    <Typography variant=\"h5\">\n                        <CountUp className={styles.cifra}  start={0} end={deaths.value} duration={2.5} separator=\",\"\n                        />\n                    </Typography>\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toLocaleDateString()}</Typography>\n                    <Typography variant=\"body2\">NÃºmero de muertes totales causadas por COVID-19</Typography>\n                </CardContent>\n            </Grid>\n            {active ? activos : activos}\n        </Grid>\n        </div>\n    )\n}\n\nexport default Cards;","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api/countries/CHILE';\nexport const fetchData = async (provincia) => {\n    let changeableUrl = url;\n    if (provincia) {\n        changeableUrl = `${url}/confirmed`;\n        try {\n            const data = await axios.get(changeableUrl);\n            const filteredData = data.data.find((province) => {\n                if (province.provinceState == provincia) {\n                    return province;\n                };\n            })\n            return {\n                confirmed: { value: filteredData.confirmed }, recovered: { value: filteredData.recovered }, deaths: { value: filteredData.deaths}, active: { value: filteredData.active },\n                lastUpdate: new Date(filteredData.lastUpdate).toISOString()\n            };\n        } catch (error) {\n            return error;\n        }\n    } else {\n        try {\n            const {\n                data: {\n                    confirmed,\n                    recovered,\n                    deaths,\n                    lastUpdate,\n                    active,\n                }\n            } = await axios.get(changeableUrl);\n\n            console.log(\"fetchdata else: \", confirmed,\n                recovered,\n                deaths,\n                lastUpdate, active);\n            return {\n                confirmed,\n                recovered,\n                deaths,\n                lastUpdate,\n                active,\n            };\n        } catch (error) {\n            return error;\n        }\n    }\n};\n\nexport const fetchDailyData = async () => {\n    try {\n        const {\n            data\n        } = await axios.get(`${url}`);\n\n        return data.map(({\n            confirmed,\n            deaths,\n            reportDate: date\n        }) => ({\n            confirmed: confirmed.total,\n            deaths: deaths.total,\n            date\n        }));\n    } catch (error) {\n        return error;\n    }\n};\n\nexport const fetchCountries = async () => {\n    try {\n        const {data: provincias } = await axios.get(`${url}/confirmed`);\n        return provincias.map((provincia) => provincia.provinceState);\n    } catch (error) {\n        return error;\n    }\n};","import React, { useState, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { fetchDailyData } from '../../api';\nimport styles from './Chart.module.css';\n\nconst Chart = ({data : {confirmed, recovered, deaths, active} , provincia}) => {\n    const [dailyData, setDailyData] = useState({});\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData());\n        }\n        fetchAPI();\n    }, []);\n\n\n    const inicial = (\n        confirmed ? (\n    < Bar\n    data = {\n        {\n            labels: ['Casos Totales', 'Recuperados Totales','Muertes'],\n            datasets: [{\n                label: 'Total de personas',\n                backgroundColor: ['rgba(31, 97, 179,0.5)',\n                    'rgba(0, 255, 0, 0.5)',\n                    'rgba(255, 30, 0, 0.5)',\n\n                ],\n                data: [confirmed.value, recovered.value, deaths.value],\n            }, ],\n        }\n    }\n\n    options = {\n    {\n    legends: {\n        display: false\n    },\n    title: {\n        display: true,\n        text: `Estado actualizado en todo Chile`\n    }\n    }\n    }\n    />\n\n    ): null\n\n    );\n\n\nconst barChart = (\nprovincia ? (\n    <Bar\n        data={{\n            labels: ['Casos Totales', 'Recuperados Totales','Activos', 'Muertes'],\n            datasets: [ {\n                label: 'Total de personas',\n                backgroundColor: ['rgba(31, 97, 179,0.5)',\n                    'rgba(0, 255, 0, 0.5)',\n                    'rgba(242, 128, 6, 0.5)',\n                    'rgba(255, 30, 0, 0.5)',\n                    \n                ],\n            data: [confirmed.value, recovered.value, active.value, deaths.value],\n            },\n            ],\n        }}\n\n        options={{\n            legends: {display:false}, \n            title: { display:true, text:`Estado actualizado en la regiÃ³n de ${provincia}`}\n        }}\n     />\n\n) : null\n\n);\n\nreturn (\n    <div className={styles.container}>\n        {provincia ? barChart : inicial}\n    </div>\n);\n}\n\nexport default Chart;","import React, { useState, useEffect} from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\n\nimport styles from './CountryPicker.module.css';\n\nimport { fetchCountries } from '../../api';\n\nconst CountryPicker = ({\n        handleCountryChange\n    }) => {\n\n    const [fetchedCountries, setFetchedCountries] = useState([]);\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setFetchedCountries(await fetchCountries());\n        }\n\n        fetchAPI();\n\n    }, [setFetchedCountries]);\n\n\n    return ( \n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue = \"\"\n            onChange = {\n                (e) => {\n                     handleCountryChange(e.target.value)\n                     \n                }\n            } >\n{/* Lo siguiente es para el selector de paÃ­ses */}\n                <option value=\"\">Todo Chile</option>\n                {fetchedCountries.map((provincia, i) => <option key={i} value={provincia}>{provincia}</option>)}\n            </NativeSelect>\n\n        </FormControl>\n    )\n}\n\nexport default CountryPicker;","import React from 'react';\n\n// import Cards from './components/Cards/Cards.jsx';\n// import Chart from './components/Chart/Chart.jsx';\n// import CountryPicker from './components/CountryPicker/CountryPicker.jsx';\n\nimport {Cards, Chart, CountryPicker} from './components';\nimport styles from './App.module.css';\nimport { fetchData} from './api';\nimport Zoom from 'react-reveal/Zoom';\nimport { AnimationWrapper } from 'react-hover-animation';\nimport numeralogo from './images/favicon.png';\nimport Avatar from '@material-ui/core/Avatar';\nimport Chip from '@material-ui/core/Chip';\nimport imagen from './images/perfiloptimizada.jpg';\n\n// AcÃ¡ se agrega el componente\nclass App extends React.Component {\n\n\n    state = {\n        data: {},\n        provincia: '',\n    }\n\n    async componentDidMount(){\n        const fetchedData = await fetchData();\n\n        this.setState({ data: fetchedData })\n    }\n\n    handleCountryChange = async (provincia) => {\n        const fetchedData = await fetchData(provincia);\n        console.log(fetchedData)\n        this.setState({ data: fetchedData, provincia: provincia })\n    }\n\n\n    render() {\n        const { data, provincia} = this.state;\n\n\n        return (\n        <div className={styles.container}>\n            <Zoom>\n                <AnimationWrapper>\n                <p className={styles.menu}><a href=\"https://adinamarca.github.io\" className={styles.menu}>Volver a <span className={styles.naranjo}>numeral</span>.<span className={styles.azul}>lab</span></a></p>\n                </AnimationWrapper>\n                <AnimationWrapper>\n                <a href=\"https://adinamarca.github.io\">\n                <img className={styles.imagen} src={numeralogo} alt=\"Logo de Numeral.Lab\" />\n                </a>\n                </AnimationWrapper>\n                <AnimationWrapper>\n                <h1 className={styles.titulo}>Seguimiento COVID-19</h1>\n                </AnimationWrapper>\n                <AnimationWrapper>\n                <h3 className={styles.chile}>Chile</h3>\n                </AnimationWrapper>\n                <AnimationWrapper>\n                <h4 className={styles.fuente}>Las cifras a continuaciÃ³n son de <a className={styles.enlacefuente} href=\"https://covid19.mathdro.id/\">fuente internacional</a>. Las regiones estÃ¡n ordenadas por nÃºmero de casos totales.</h4>\n                </AnimationWrapper>\n                <AnimationWrapper>\n                <Cards data={data} />\n                </AnimationWrapper>\n                <AnimationWrapper>\n                <h5 className={styles.titulo}>Â¡Selecciona una regiÃ³n!</h5>\n                </AnimationWrapper>\n                </Zoom>\n                <CountryPicker className={styles.selector} handleCountryChange = {\n                    this.handleCountryChange\n                }\n                />\n                <Chart data={data} provincia={provincia} />\n                <Zoom>\n                    <AnimationWrapper>\n                    <h5 className={styles.titulo}>CrÃ©ditos y contacto</h5>\n                    </AnimationWrapper>\n                    <AnimationWrapper>\n                    <p className={styles.fuente}> La aplicaciÃ³n fue desarrollada en un principio por <a className = {styles.enlacefuente}\n                    href = \"https://youtube.com/javascriptmastery\" > JavaScript Mastery </a> para cÃ³digo abierto, y se sustenta en las fuentes de <a className={styles.enlacefuente} href=\"https://covid19.mathdro.id/\"> la API de COVID19 de MathDro</a>. Posteriormente fue modificada por\n                    </p>\n                    </AnimationWrapper>\n                    <AnimationWrapper>\n                    <a a className={styles.enlacefuente} href=\"https://linkedin.com/in/alejandrodinamarca/\"><Chip className={styles.chipp} label=\"Alejandro Dinamarca\" color=\"secondary\" avatar={<Avatar src={imagen} />} /></a>\n                    </AnimationWrapper>\n                    <AnimationWrapper><p className={styles.fuente}>La WEB-APP obtiene los datos de Chile y sus regiones, la modificaciÃ³n tomÃ³ un trabajo de 18 hrs. debido al formato JSON y ciertas complicaciones; espero sea de utilidad y pueda proveer de informaciÃ³n en tiempo real para la ciudadanÃ­a. </p>\n                    </AnimationWrapper>\n                    <AnimationWrapper>\n                    <p className={styles.contacto}>La visualizaciÃ³n de datos empodera las decisiones con inteligencia. UsÃ©mosla y seamos conscientes de que de nosotros depende que la pandemia no escale. CuidÃ©monos en medida de lo posible y salgamos adelante. </p>\n                    </AnimationWrapper> \n                </Zoom>\n        </div>\n        )\n    }\n}\n\n\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/favicon.db739906.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__ebhun\",\"menu\":\"App_menu__1kLq-\",\"naranjo\":\"App_naranjo__2p7SO\",\"azul\":\"App_azul__2ygVY\",\"titulo\":\"App_titulo__3VK_E\",\"chile\":\"App_chile__2bgso\",\"fuente\":\"App_fuente__3bsO_\",\"enlacefuente\":\"App_enlacefuente__3DXSo\",\"imagen\":\"App_imagen__3d-NB\",\"contacto\":\"App_contacto__1SVgO\",\"chipp\":\"App_chipp__3Q9LA\",\"image\":\"App_image__35T8E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3i9iJ\",\"card\":\"Cards_card__29hA8\",\"cifra\":\"Cards_cifra__1Q0Wz\",\"titulo\":\"Cards_titulo__1oGw_\",\"infectados\":\"Cards_infectados__OR_8K\",\"recuperados\":\"Cards_recuperados__2wndY\",\"muertes\":\"Cards_muertes__2vy3i\",\"activos\":\"Cards_activos__13tfX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__viSxn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__36iw3\"};","module.exports = __webpack_public_path__ + \"static/media/perfiloptimizada.cd3f9caa.jpg\";"],"sourceRoot":""}